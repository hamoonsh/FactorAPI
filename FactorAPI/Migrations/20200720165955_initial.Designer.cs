// <auto-generated />
using System;
using FactorAPI.Models.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FactorAPI.Migrations
{
    [DbContext(typeof(FactorDBContext))]
    [Migration("20200720165955_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FactorAPI.Models.Entities.Invoice", b =>
                {
                    b.Property<long>("InvoiceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsPayed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("RegDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("UserID")
                        .HasColumnType("bigint");

                    b.HasKey("InvoiceID");

                    b.ToTable("Invoice","pmwebsit_FactorDB");
                });

            modelBuilder.Entity("FactorAPI.Models.Entities.InvoiceItem", b =>
                {
                    b.Property<long>("ItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<decimal>("DiscountPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("InvoiceID")
                        .HasColumnType("bigint");

                    b.Property<decimal>("PricePerEach")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("ProductID")
                        .HasColumnType("bigint");

                    b.HasKey("ItemID");

                    b.HasIndex("InvoiceID");

                    b.ToTable("InvoiceItem","pmwebsit_FactorDB");
                });

            modelBuilder.Entity("FactorAPI.Models.Entities.InvoiceItem", b =>
                {
                    b.HasOne("FactorAPI.Models.Entities.Invoice", null)
                        .WithMany("InvoiceItems")
                        .HasForeignKey("InvoiceID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
